name: React_node.yml

on:
  pull_request:
    branches: [ dev ]

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install

    - name: Run the tests
      run: npm test

    - name: Build
      run: npm run build

  deploy:
    needs: build
    runs-on: ubuntu-latest    
    env:
       PR_NUMBER: ${{ github.event.number }}
 # Secrets to be created in repository  Secret & Hostname & Username      
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Generate deployment package
        run: zip -r ${{ PR_NUMBER }}.zip build/ 

      - name: copy file via ssh key
        uses: appleboy/scp-action@master
        with:
          HOSTNAME: ${{ secrets.HOSTNAME }}
          USER_NAME: ${{ secrets.USERNAME }}
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
          source: "${{ PR_NUMBER }}.zip"
          target: "/home/ubuntu/rcx/"
    
      - uses: actions/checkout@v2 
      - name: Deploy in EC2
        env:
            PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
            HOSTNAME : ${{ secrets.HOSTNAME  }}
            USER_NAME : ${{ secrets.USER_NAME  }}
            PR_NUMBER: ${{ github.event.number }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          
            cd /home/ubuntu/rcx/ &&
            unzip ${{ PR_NUMBER }}.zip &&
            cd ${{ PR_NUMBER }} &&
            ls -lrt
            



